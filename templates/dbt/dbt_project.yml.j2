# {{ project.name }} - Data Vault Model Project
# Generated by Data Modeling Automation

name: '{{ project.name }}'
version: '{{ project.version }}'
config-version: {{ project.get('config-version', 2) }}

profile: '{{ project.profile }}'

# Directory structure
model-paths: ["{{ project.get('model-paths', ['models'])[0] }}"]
analysis-paths: ["{{ project.get('analysis-paths', ['analyses'])[0] }}"]
test-paths: ["{{ project.get('test-paths', ['tests'])[0] }}"]
seed-paths: ["{{ project.get('seed-paths', ['seeds'])[0] }}"]
macro-paths: ["{{ project.get('macro-paths', ['macros'])[0] }}"]
snapshot-paths: ["{{ project.get('snapshot-paths', ['snapshots'])[0] }}"]

target-path: "{{ project.get('target-path', 'target') }}"  # folder where compiled SQL is written
clean-targets:         # directories to be removed by `dbt clean`
{% for target in project.get('clean-targets', ['target', 'dbt_packages']) %}
  - "{{ target }}"
{% endfor %}

# Model configuration
models:
  {{ project.name }}:
    materialized: {{ project.models[project.name].get('materialized', 'table') }}
    
    # Hub models
    hub:
      materialized: {{ project.models[project.name].hub.get('materialized', 'incremental') }}
      tags: {{ project.models[project.name].hub.get('tags', ['hub']) }}
    
    # Link models
    link:
      materialized: {{ project.models[project.name].link.get('materialized', 'incremental') }}
      tags: {{ project.models[project.name].link.get('tags', ['link']) }}
    
    # Satellite models
    satellite:
      materialized: {{ project.models[project.name].satellite.get('materialized', 'incremental') }}
      tags: {{ project.models[project.name].satellite.get('tags', ['satellite']) }}

# Vars configuration
{% if project.get('vars') %}
vars:
{% for var_name, var_value in project.vars.items() %}
  {{ var_name }}: {{ var_value }}
{% endfor %}
{% endif %}
